/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { Router, RouterInterface } from "../Router";

const _abi = [
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [
      {
        name: "_factory",
        type: "address",
      },
      {
        name: "_weth",
        type: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        name: "_tokenA",
        type: "address",
      },
      {
        name: "_tokenAId",
        type: "uint256",
      },
      {
        name: "_tokenB",
        type: "address",
      },
      {
        name: "_amountADesired",
        type: "uint256",
      },
      {
        name: "_amountBDesired",
        type: "uint256",
      },
      {
        name: "_amountAMin",
        type: "uint256",
      },
      {
        name: "_amountBMin",
        type: "uint256",
      },
      {
        name: "_to",
        type: "address",
      },
      {
        name: "_deadline",
        type: "uint256",
      },
    ],
    name: "addLiquidity",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
      {
        name: "",
        type: "uint256",
      },
      {
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        name: "_token",
        type: "address",
      },
      {
        name: "_tokenId",
        type: "uint256",
      },
      {
        name: "_amountTokenDesired",
        type: "uint256",
      },
      {
        name: "_amountTokenMin",
        type: "uint256",
      },
      {
        name: "_amountETHMin",
        type: "uint256",
      },
      {
        name: "_to",
        type: "address",
      },
      {
        name: "_deadline",
        type: "uint256",
      },
    ],
    name: "addLiquidityETH",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
      {
        name: "",
        type: "uint256",
      },
      {
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        name: "_tokenA",
        type: "address",
      },
      {
        name: "_tokenAId",
        type: "uint256",
      },
      {
        name: "_tokenB",
        type: "address",
      },
      {
        name: "_liquidity",
        type: "uint256",
      },
      {
        name: "_amountAMin",
        type: "uint256",
      },
      {
        name: "_amountBMin",
        type: "uint256",
      },
      {
        name: "_to",
        type: "address",
      },
      {
        name: "_deadline",
        type: "uint256",
      },
    ],
    name: "removeLiquidity",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
      {
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        name: "_token",
        type: "address",
      },
      {
        name: "_tokenId",
        type: "uint256",
      },
      {
        name: "_liquidity",
        type: "uint256",
      },
      {
        name: "_amountTokenMin",
        type: "uint256",
      },
      {
        name: "_amountETHMin",
        type: "uint256",
      },
      {
        name: "_to",
        type: "address",
      },
      {
        name: "_deadline",
        type: "uint256",
      },
    ],
    name: "removeLiquidityETH",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
      {
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        name: "_tokenA",
        type: "address",
      },
      {
        name: "_tokenAId",
        type: "uint256",
      },
      {
        name: "_tokenB",
        type: "address",
      },
      {
        name: "_liquidity",
        type: "uint256",
      },
      {
        name: "_amountAMin",
        type: "uint256",
      },
      {
        name: "_amountBMin",
        type: "uint256",
      },
      {
        name: "_to",
        type: "address",
      },
      {
        name: "_deadline",
        type: "uint256",
      },
      {
        name: "_approveMax",
        type: "bool",
      },
      {
        name: "_v",
        type: "uint8",
      },
      {
        name: "_r",
        type: "bytes32",
      },
      {
        name: "_s",
        type: "bytes32",
      },
    ],
    name: "removeLiquidityWithPermit",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
      {
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        name: "_token",
        type: "address",
      },
      {
        name: "_tokenId",
        type: "uint256",
      },
      {
        name: "_liquidity",
        type: "uint256",
      },
      {
        name: "_amountTokenMin",
        type: "uint256",
      },
      {
        name: "_amountETHMin",
        type: "uint256",
      },
      {
        name: "_to",
        type: "address",
      },
      {
        name: "_deadline",
        type: "uint256",
      },
      {
        name: "_approveMax",
        type: "bool",
      },
      {
        name: "_v",
        type: "uint8",
      },
      {
        name: "_r",
        type: "bytes32",
      },
      {
        name: "_s",
        type: "bytes32",
      },
    ],
    name: "removeLiquidityETHWithPermit",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
      {
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        name: "_amountIn",
        type: "uint256",
      },
      {
        name: "_amountOutMin",
        type: "uint256",
      },
      {
        name: "_path",
        type: "address[]",
      },
      {
        name: "_tokenIds",
        type: "uint256[]",
      },
      {
        name: "_isERC1155",
        type: "bool[]",
      },
      {
        name: "_to",
        type: "address",
      },
      {
        name: "_deadline",
        type: "uint256",
      },
    ],
    name: "swapExactTokensForTokens",
    outputs: [
      {
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        name: "_amountOut",
        type: "uint256",
      },
      {
        name: "_amountInMax",
        type: "uint256",
      },
      {
        name: "_path",
        type: "address[]",
      },
      {
        name: "_tokenIds",
        type: "uint256[]",
      },
      {
        name: "_isERC1155",
        type: "bool[]",
      },
      {
        name: "_to",
        type: "address",
      },
      {
        name: "_deadline",
        type: "uint256",
      },
    ],
    name: "swapTokensForExactTokens",
    outputs: [
      {
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        name: "_amountOutMin",
        type: "uint256",
      },
      {
        name: "_path",
        type: "address[]",
      },
      {
        name: "_tokenIds",
        type: "uint256[]",
      },
      {
        name: "_isERC1155",
        type: "bool[]",
      },
      {
        name: "_to",
        type: "address",
      },
      {
        name: "_deadline",
        type: "uint256",
      },
    ],
    name: "swapExactETHForTokens",
    outputs: [
      {
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        name: "_amountOut",
        type: "uint256",
      },
      {
        name: "_amountInMax",
        type: "uint256",
      },
      {
        name: "_path",
        type: "address[]",
      },
      {
        name: "_tokenIds",
        type: "uint256[]",
      },
      {
        name: "_isERC1155",
        type: "bool[]",
      },
      {
        name: "_to",
        type: "address",
      },
      {
        name: "_deadline",
        type: "uint256",
      },
    ],
    name: "swapTokensForExactETH",
    outputs: [
      {
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        name: "_amountIn",
        type: "uint256",
      },
      {
        name: "_amountOutMin",
        type: "uint256",
      },
      {
        name: "_path",
        type: "address[]",
      },
      {
        name: "_tokenIds",
        type: "uint256[]",
      },
      {
        name: "_isERC1155",
        type: "bool[]",
      },
      {
        name: "_to",
        type: "address",
      },
      {
        name: "_deadline",
        type: "uint256",
      },
    ],
    name: "swapExactTokensForETH",
    outputs: [
      {
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        name: "_amountOut",
        type: "uint256",
      },
      {
        name: "_path",
        type: "address[]",
      },
      {
        name: "_tokenIds",
        type: "uint256[]",
      },
      {
        name: "_isERC1155",
        type: "bool[]",
      },
      {
        name: "_to",
        type: "address",
      },
      {
        name: "_deadline",
        type: "uint256",
      },
    ],
    name: "swapETHForExactTokens",
    outputs: [
      {
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        name: "_amountA",
        type: "uint256",
      },
      {
        name: "_reserveA",
        type: "uint112",
      },
      {
        name: "_reserveB",
        type: "uint112",
      },
    ],
    name: "quote",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        name: "_amountIn",
        type: "uint256",
      },
      {
        name: "_reserveIn",
        type: "uint112",
      },
      {
        name: "_reserveOut",
        type: "uint112",
      },
    ],
    name: "getAmountOut",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        name: "_amountOut",
        type: "uint256",
      },
      {
        name: "_reserveIn",
        type: "uint112",
      },
      {
        name: "_reserveOut",
        type: "uint112",
      },
    ],
    name: "getAmountIn",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        name: "_amountIn",
        type: "uint256",
      },
      {
        name: "_path",
        type: "address[]",
      },
      {
        name: "_tokenIds",
        type: "uint256[]",
      },
      {
        name: "_isERC1155",
        type: "bool[]",
      },
    ],
    name: "getAmountsOut",
    outputs: [
      {
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        name: "_amountOut",
        type: "uint256",
      },
      {
        name: "_path",
        type: "address[]",
      },
      {
        name: "_tokenIds",
        type: "uint256[]",
      },
      {
        name: "_isERC1155",
        type: "bool[]",
      },
    ],
    name: "getAmountsIn",
    outputs: [
      {
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "factory",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "weth",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class Router__factory {
  static readonly abi = _abi;
  static createInterface(): RouterInterface {
    return new utils.Interface(_abi) as RouterInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Router {
    return new Contract(address, _abi, signerOrProvider) as Router;
  }
}
